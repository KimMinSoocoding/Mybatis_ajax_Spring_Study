/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-01-03 07:40:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin.productManage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import category.CategoryBean;
import java.util.ArrayList;
import category.CategoryDao;
import cart.CartDao;
import member.MemberDao;
import member.MemberBean;

public final class prodInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/admin/productManage/../top_admin.jsp", Long.valueOf(1672659551000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("category.CategoryDao");
    _jspx_imports_classes.add("member.MemberDao");
    _jspx_imports_classes.add("category.CategoryBean");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("cart.CartDao");
    _jspx_imports_classes.add("member.MemberBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body, header {\r\n");
      out.write("	    font-size: 17px;\r\n");
      out.write("	    line-height: 1.25;\r\n");
      out.write("	    font-family: 'Noto Sans KR', AppleGothic, Helvetica, sans-serif;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	body{\r\n");
      out.write("	    background-color: #FFF;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* a태그 밑줄 없애기 */\r\n");
      out.write("	a{\r\n");
      out.write("  		text-decoration: none;\r\n");
      out.write("  		color: #1c1c1c;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 리스트의 왼쪽 점 없애기 */\r\n");
      out.write("	li{\r\n");
      out.write("		list-style : none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 마우스 올리면 색깔 변하게 하기 */\r\n");
      out.write("	.tmenu > a:hover{\r\n");
      out.write("		color : #C2674B;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 최상단 헤더--------------*/\r\n");
      out.write("	.hd{\r\n");
      out.write("		width : 100%;\r\n");
      out.write("		background-color: #FFF;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.hd img{\r\n");
      out.write("		width : 247px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.hdRight li{\r\n");
      out.write("		float : right;\r\n");
      out.write("		margin : 10px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.hdRight a{\r\n");
      out.write("		font-size: 12px;\r\n");
      out.write("	}\r\n");
      out.write("	/* ----------------------*/\r\n");
      out.write("	\r\n");
      out.write("	/* 카테고리가 위치한 헤더-------------- */\r\n");
      out.write("	.hd2{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		border-top: 1px solid black;\r\n");
      out.write("	}\r\n");
      out.write("	.hd2 td{\r\n");
      out.write("		height : 50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.cateWrap, .searchWrap{\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.tmenu{\r\n");
      out.write("		position: relative; /* class = 'depth2'가 absolute 일 때 이것을 부모로 인식하도록 position을 지정해줌*/\r\n");
      out.write("		margin: 0px 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 카테고리에 마우스 올렸을 때 화면에 뜨는 부분 */\r\n");
      out.write("	.depth2{\r\n");
      out.write("		position: absolute; /* 다른 요소에 영향을 주지않고 배치시키기 위함  */\r\n");
      out.write("		transform: translate(-50%,0%);\r\n");
      out.write("		right : 50%; \r\n");
      out.write("		left : 50%;\r\n");
      out.write("		top: 100%;\r\n");
      out.write("		width: 100px; \r\n");
      out.write("		padding-left: 0px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		padding-top: 10px;\r\n");
      out.write("		/* background-color: #FFF; */\r\n");
      out.write("		margin-top: 0;\r\n");
      out.write("		background-color: #FFF;\r\n");
      out.write("		\r\n");
      out.write("		/* border : 1px red solid; */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.depth2 li{\r\n");
      out.write("		padding : 5px;\r\n");
      out.write("		font-size: 13px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write(" 		//카테고리 펼쳐지고 접히기\r\n");
      out.write("		jQuery(\".tmenu\").live(\"mouseenter\", function() {\r\n");
      out.write("		   jQuery(this).find(\".depth2\").slideDown(\"fast\");\r\n");
      out.write("		});\r\n");
      out.write("		jQuery(\".tmenu\").live(\"mouseleave\", function() {\r\n");
      out.write("		   jQuery(this).find(\".depth2\").slideUp(\"fast\");\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function gotoCart(){\r\n");
      out.write("		");

		if(session.getAttribute("mno") == null){
      out.write("\r\n");
      out.write("			location.href = \"./loginView.jsp\";\r\n");
      out.write("		");
			
		}
		else{
		
      out.write("\r\n");
      out.write("			location.href = \"");
      out.print(request.getContextPath());
      out.write("/user/cart/showCart.jsp\";	\r\n");
      out.write("		");
	
		}
		
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<table class=\"hd\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=33%></td>\r\n");
      out.write("			<td width=33% align=\"center\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/user/main.jsp\" class=\"hd_logo\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/title.png\" style=\"height:40px; width:230px\"></a></td>\r\n");
      out.write("			\r\n");
      out.write("			<td width=33% align=\"right\">\r\n");
      out.write("				<ul class=\"hdRight\">\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"javascript:gotoCart()\">\r\n");
      out.write("						CART<span class=\"bsCount\">(<span id=\"user_basket_quantity\" class=\"user_basket_quantity\">\r\n");
      out.write("						");

						int result = 0;
						if(session.getAttribute("mno") != null){
							int mno = (int)session.getAttribute("mno");
							CartDao ctdao = CartDao.getInstance();
							result = ctdao.countItemInCart(mno);	
						}
						
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						");
      out.print(result);
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						</span>)</span>\r\n");
      out.write("						</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					");

						MemberDao mdao = MemberDao.getInstance();
						
						String mid = (String)session.getAttribute("mid");
						
						if(mid == null){ // 로그인을 하지 않은 상태
						
      out.write("\r\n");
      out.write("							<li><a href=\"https://www.jogunshop.com/shop/idinfo.html?type=new&amp;mem_type=person&amp;first=\">JOIN</a></li>\r\n");
      out.write("							<li><a href=\"./loginView.jsp\">LOGIN</a></li>\r\n");
      out.write("						");
							
						}
						else{ // 로그인 상태
							MemberBean mbean = mdao.getMemberById(mid);
							
      out.write("\r\n");
      out.write("							<li><a href=\"/shop/member.html?type=mynewmain\">MYPAGE</a></li>\r\n");
      out.write("							<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/user/logoutProc.jsp\">LOGOUT</a></li>\r\n");
      out.write("							<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/user/main.jsp\">HOME</a></li>\r\n");
      out.write("							<li><a>");
      out.print(mbean.getName());
      out.write("님</a></li>\r\n");
      out.write("							");

						}

					
      out.write("\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					<!-- <li><a href=\"https://www.jogunshop.com/shop/idinfo.html?type=new&amp;mem_type=person&amp;first=\">JOIN</a></li>\r\n");
      out.write("					<li><a href=\"/shop/member.html?type=login\">LOGIN</a></li> -->\r\n");
      out.write("				</ul>\r\n");
      out.write("			</td>\r\n");
      out.write("		<tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<!-- <hr> -->\r\n");
      out.write("	<table class=\"hd2\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"20%\"></td>\r\n");
      out.write("			<td width=\"60%\">\r\n");
      out.write("				<!-- 카테고리 -->\r\n");
      out.write("				<div class=\"cateWrap\">   <!-- 절대주소 사용해야함.  -->\r\n");
      out.write("					<span class=\"tmenu\"> <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/categoryManage/categoryManage.jsp\">카테고리 관리</a>\r\n");
      out.write("					</span> \r\n");
      out.write("					\r\n");
      out.write("					<span class=\"tmenu\"> \r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/productManage/prodList.jsp\">상품관리</a>\r\n");
      out.write("					</span> \r\n");
      out.write("					\r\n");
      out.write("					<span class=\"tmenu\"> \r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/orderManage/orderList.jsp\">주문내역</a>\r\n");
      out.write("					</span> \r\n");
      out.write("					\r\n");
      out.write("					<span class=\"tmenu\"> \r\n");
      out.write("						<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/userManage/userList.jsp\">회원관리</a>\r\n");
      out.write("					</span> \r\n");
      out.write("				</div>\r\n");
      out.write("			</td> \r\n");
      out.write("			<td width=\"20%\">\r\n");
      out.write("			</td> \r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"3\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</header>");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var opcount = 1; // 전달할 추가한 옵션의 개수(최소는 1개)\r\n");
      out.write("	var opArr = [];\r\n");
      out.write("	opArr.push(1);\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$(\"select[name='selLargeCategory']\").change(function(){\r\n");
      out.write("			var choicedNo = $(this).val(); // 선택된 것의 lno 값\r\n");
      out.write("		\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"returnSCategory.jsp\",\r\n");
      out.write("				dataType : \"json\",\r\n");
      out.write("				data :{\r\n");
      out.write("					lno : choicedNo\r\n");
      out.write("				},\r\n");
      out.write("				success : function(responseData){		\r\n");
      out.write("					\r\n");
      out.write("					var len =Object.keys(responseData.ITEMS).length;\r\n");
      out.write("					var temp = \"<option value='-1'>소분류 생략</option>\";\r\n");
      out.write("					\r\n");
      out.write("					for(i = 0; i < len ; i++){\r\n");
      out.write("						temp += \"<option value=\" + JSON.stringify(responseData.ITEMS[i].sno) + \">\" + (JSON.stringify(responseData.ITEMS[i].sname)).replace(/\"/g,\"\") + \"</option>\"			\r\n");
      out.write("					}\r\n");
      out.write("					if(len == 0){\r\n");
      out.write("						$(\"select[name='selSmallCategory']\").html(\"<option value='-1'>소분류가 존재하지 않습니다</option>\");\r\n");
      out.write("						//$(\"select[name='selSmallCategory']\").parent().parent().hide();\r\n");
      out.write("					}else{\r\n");
      out.write("						$(\"select[name='selSmallCategory']\").parent().parent().show();\r\n");
      out.write("						$(\"select[name='selSmallCategory']\").html(temp);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#optionAdd').live(\"click\", function(){\r\n");
      out.write("			$(this).parent().append(\"<span><input type='text' value='' size='5' name='opn_\" + (++opcount) + \"'> <input type='text' value='' size='5' name='stock_\" + opcount +\"'> <input type='button' value='-' class='deleteopt'> <br></span>\");\r\n");
      out.write("			opArr.push(opcount);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$('.deleteopt').live(\"click\", function(){\r\n");
      out.write("			//name속성 뒤에 붙은 값을 분리해서 이걸 배열에서 제거하자.\r\n");
      out.write("			var temp = $(this).prev().attr(\"name\"); // stock_2\r\n");
      out.write("			var tempArr = temp.split('_');\r\n");
      out.write("			//alert(tempArr[1] + \"삭제\");\r\n");
      out.write("			for(var i = 0; i < opArr.length; i++) {\r\n");
      out.write("				  if(opArr[i] == tempArr[1])  {\r\n");
      out.write("					  opArr.splice(i, 1);\r\n");
      out.write("				    i--;\r\n");
      out.write("				    break;\r\n");
      out.write("				  }\r\n");
      out.write("			}\r\n");
      out.write("			//alert(opArr);\r\n");
      out.write("			//alert($(this).parent().prev().children().attr(\"name\"));\r\n");
      out.write("			\r\n");
      out.write("			$(this).parent().remove();\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function check(){\r\n");
      out.write("		if($(\"select[name='selLargeCategory']\").val() == \"선택안함\"){\r\n");
      out.write("			alert(\"대분류를 선택해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='name']\").val() == \"\"){\r\n");
      out.write("			alert(\"상품명을 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='oriprice']\").val() == \"\"){\r\n");
      out.write("			alert(\"정가를 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='discprice']\").val() == \"\"){\r\n");
      out.write("			alert(\"할인가를 입력해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		if(isNaN($(\"input[name='stock_1']\").val())){\r\n");
      out.write("			alert(\"재고는 숫자만 입력 가능합니다.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//alert(opcount);\r\n");
      out.write("		var temp = \"\";\r\n");
      out.write("		\r\n");
      out.write("		for(var i = 0; i < opArr.length; i++){\r\n");
      out.write("			temp += opArr[i] + \",\";\r\n");
      out.write("		}\r\n");
      out.write("		document.f.opnums.value = temp;\r\n");
      out.write("		//alert(temp);\r\n");
      out.write("		//alert(document.f.opnums.value);\r\n");
      out.write("		//return false;\r\n");
      out.write("		\r\n");
      out.write("		//null로 보내면 안되므로\r\n");
      out.write("		//alert($(\"select[name='selSmallCategory']\").val());\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		for(var i = 0; i<opArr.length; i++){\r\n");
      out.write("			if($(\"input[name='opn_\"+ opArr[i] +\"']\").val() == \"\"){\r\n");
      out.write("				alert(\"빈칸없이 옵션명을 입력해야 합니다.\");\r\n");
      out.write("				$(\"input[name='opn_\"+ opArr[i] +\"']\").focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if($(\"input[name='stock_\"+ opArr[i] +\"']\").val() == \"\"){\r\n");
      out.write("				alert(\"빈칸없이 재고수량을 입력해야 합니다.\");\r\n");
      out.write("				$(\"input[name='stock_\"+ opArr[i] +\"']\").focus();\r\n");
      out.write("				return false;	\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if(isNaN($(\"input[name='stock_\"+ opArr[i] +\"']\").val())){\r\n");
      out.write("				alert(\"재고수량은 숫자만 입력가능합니다.\");\r\n");
      out.write("				$(\"input[name='stock_\"+ opArr[i] +\"']\").focus().select();\r\n");
      out.write("				return false;\r\n");
      out.write("			}	\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		document.f.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write(" \r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	#producRegister{\r\n");
      out.write("		margin : auto;\r\n");
      out.write("		/* border : 1px solid black; */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#producRegister > caption{\r\n");
      out.write("		font-size: 19px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#t2{\r\n");
      out.write("		width : 250px;\r\n");
      out.write("	}\r\n");
      out.write("	textarea{\r\n");
      out.write("		resize: none; \r\n");
      out.write("		width: 100%; \r\n");
      out.write("		height:70px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	CategoryDao cdao = CategoryDao.getInstance();
	ArrayList<CategoryBean> lcateList = cdao.getOnlyLargeCategory();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"f\" action=\"prodInsertProc.jsp\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("	<table id=\"producRegister\">\r\n");
      out.write("		<caption>\r\n");
      out.write("				<strong>상품등록</strong>\r\n");
      out.write("				<hr>\r\n");
      out.write("		</caption>\r\n");
      out.write("		<tr>\r\n");
      out.write("		 	<td>대분류</td>\r\n");
      out.write("		 	<td>\r\n");
      out.write("		 		<select name=\"selLargeCategory\">\r\n");
      out.write("		 			<option value=\"선택안함\" selected>선택안함</option>\r\n");
      out.write("		 			");
 
		 			for(CategoryBean cbean : lcateList){
		 				if(cbean.getLno() != -1){
		 			
      out.write("\r\n");
      out.write("		 				<option value=\"");
      out.print(cbean.getLno());
      out.write('"');
      out.write('>');
      out.print(cbean.getLname());
      out.write("</option>\r\n");
      out.write("		 			");

		 				}
		 			}
		 			
      out.write("\r\n");
      out.write("		 		</select>	 	\r\n");
      out.write("		 	</td>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 \r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>소분류</td>\r\n");
      out.write("		 	<td>\r\n");
      out.write("		 		<select name=\"selSmallCategory\">\r\n");
      out.write("		 			<option value=\"선택안함\">대분류를 먼저 선택해주세요</option>\r\n");
      out.write("		 		</select>	 	\r\n");
      out.write("		 	</td>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>이름</td>\r\n");
      out.write("		 	<td><input type=\"text\" name=\"name\" value=\"미니룩데이 베이지 스커트\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>정가</td>\r\n");
      out.write("		 	<td><input type=\"text\" name=\"oriprice\" value=\"5000\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>할인판매가</td>\r\n");
      out.write("		 	<td><input type=\"text\" name=\"discprice\" value=\"3000\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>상품설명</td>\r\n");
      out.write("		 	<td>\r\n");
      out.write("		 		<textarea name=\"info\">여리한 A 라인 실루엣에 플리츠 주름 잡힌 디자인으로 매력을 더한 미니스커트에요! 쫀쫀한 텐션이 느껴지는 소재와 후면 밴딩으로 편안하게 착용되어 소장 가치 높은 아이템이랍니다.</textarea>\r\n");
      out.write("			</td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>상품이미지</td>\r\n");
      out.write("		 	<td><input type=\"file\" name=\"mainImg\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>설명이미지1</td>\r\n");
      out.write("		 	<td><input type=\"file\" name=\"detailImg1\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>설명이미지2</td>\r\n");
      out.write("		 	<td><input type=\"file\" name=\"detailImg2\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 	<td>설명이미지3</td>\r\n");
      out.write("		 	<td><input type=\"file\" name=\"detailImg3\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		  <tr>\r\n");
      out.write("		 	<td>설명이미지4</td>\r\n");
      out.write("		 	<td><input type=\"file\" name=\"detailImg4\"></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 \r\n");
      out.write("		  <tr>\r\n");
      out.write("		 	<td colspan=\"2\"><hr></td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("		 \r\n");
      out.write("		 <tr border=\"1\">\r\n");
      out.write("		 	<td>\r\n");
      out.write("		 	옵션/재고\r\n");
      out.write("		 	</td>\r\n");
      out.write("		 	<td> \r\n");
      out.write("				<input type=\"button\" value=\"추가\" id=\"optionAdd\">	<br>	<br>\r\n");
      out.write("				<span><input type='text' value='S' size='5' placeholder='사이즈 등' name=\"opn_1\"> <input type='text' value='10' size='5' placeholder='재고수량' name=\"stock_1\"><br></span>	\r\n");
      out.write("\r\n");
      out.write("		 	</td>\r\n");
      out.write("		 <tr>\r\n");
      out.write("		 \r\n");
      out.write("		 <tr >\r\n");
      out.write("		 	<td colspan=\"2\" align=\"center\">\r\n");
      out.write("		 		<input type=\"hidden\" value=\"\" name=\"opnums\">\r\n");
      out.write("		 		<input type=\"button\" value=\"상품등록\" onClick=\"check()\">\r\n");
      out.write("		 		<input type=\"button\" value=\"취소\" onClick=\"location.href='prodList.jsp'\">\r\n");
      out.write("		 	</td>\r\n");
      out.write("		 </tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write(" \r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
